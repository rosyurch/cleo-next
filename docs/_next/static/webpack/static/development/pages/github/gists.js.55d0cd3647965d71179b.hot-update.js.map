{"version":3,"file":"static/webpack/static/development/pages/github/gists.js.55d0cd3647965d71179b.hot-update.js","sources":["webpack:///./views/gists.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport Gist from 'components/Gist'\nimport Input from 'generic/Input'\nimport Div from 'generic/Div'\nimport Ul from 'generic/Ul'\nimport Loading from 'components/Loading'\n\nconst Gists = ({\n  userName,\n\n  userGists,\n  setGists,\n  defaultProfile,\n  isLoading,\n  setProfile,\n}) => {\n  const [query, setQuery] = useState('')\n\n  useEffect(() => {\n    if (!userGists.length && userName) {\n      setGists(userName)\n    } else if (defaultProfile && !userGists.length) {\n      setGists(defaultProfile)\n    }\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  // get profile data\n  useEffect(() => {\n    if (!userName) {\n      setProfile(defaultProfile)\n    }\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  const renderGists = (gistList, searchTerm) =>\n    searchTerm\n      ? gistList.filter(g =>\n          Object.keys(g.files).some(fileName =>\n            fileName.toLowerCase().includes(searchTerm)\n          )\n        )\n      : gistList\n\n  return (\n    <Div width=\"100%\">\n      {userGists.length ? (\n        <Div textAlign=\"center\" borderBottom=\"1px solid #fff\" py={20}>\n          <Input\n            type=\"text\"\n            aria-label=\"search\"\n            mb={0}\n            onChange={e => setQuery(e.target.value.toLowerCase())}\n          />\n        </Div>\n      ) : null}\n\n      {isLoading && !userGists.length && <Loading>Loading...</Loading>}\n\n      <Ul display=\"flex\" flexWrap=\"wrap\">\n        {renderGists(userGists, query).map(g => (\n          <li key={g.id}>\n            <Gist data={g} />\n          </li>\n        ))}\n      </Ul>\n    </Div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  userName: state.userProfile.login,\n  userProfile: state.userProfile,\n  userGists: state.userGists,\n  isLoading: state.isLoading,\n})\n\nconst mapDispatchToProps = dispatch => ({\n  setGists: dispatch.userGists.getGists,\n  setProfile: dispatch.userProfile.getProfile,\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Gists)\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AADA;AAFA;AACA;AAQA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAQA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AACA;AAMA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AAIA;;;;A","sourceRoot":""}