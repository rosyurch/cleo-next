{"version":3,"file":"static/webpack/static/development/pages/index.js.eb2a097a3523da9283b2.hot-update.js","sources":["webpack:///./views/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport Form from 'generic/Form'\nimport Input from 'generic/Input'\nimport Button from 'generic/Button'\nimport Loading from 'components/Loading'\nimport Div from 'generic/Div'\n\nconst Index = ({\n  setProfile,\n  userProfile,\n  defaultProfile,\n  isLoading,\n  clearRepos,\n  clearGists,\n}) => {\n  const [name, setName] = useState('')\n  const [searchName, setSearchName] = useState(\n    userProfile.login || defaultProfile\n  ) // keep current user when navigating back to this page\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    setSearchName(name)\n  }\n\n  useEffect(() => {\n    if (searchName) {\n      clearRepos()\n      clearGists()\n      setProfile(searchName)\n      if (!localStorage.getItem('defaultProfile')) {\n        localStorage.setItem('defaultProfile', searchName)\n      }\n    }\n  }, [searchName]) // eslint-disable-line react-hooks/exhaustive-deps\n\n  const userNotFound = userProfile.message === 'Not Found'\n\n  // const x = 5\n  // x = 3 // triggers error\n\n  return (\n    <Div width=\"100%\">\n      <Form onSubmit={handleSubmit}>\n        <Input\n          type=\"text\"\n          value={name}\n          onChange={e => setName(e.target.value)}\n        />\n        <Button type=\"submit\" border=\"none\" borderLeft=\"1px solid #000\" p={10}>\n          Get\n        </Button>\n      </Form>\n\n      {isLoading && !userProfile.id && <Loading>Loading...</Loading>}\n\n      {userNotFound && (\n        <Div textAlign=\"center\" color=\"coral\" fontSize=\"1.5em\">\n          Couldn&apos;t find anybody\n        </Div>\n      )}\n    </Div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  userProfile: state.userProfile,\n  isLoading: state.isLoading,\n})\n\nconst mapDispatchToProps = dispatch => ({\n  setProfile: dispatch.userProfile.getProfile,\n  clearRepos: dispatch.userRepos.clearRepos,\n  clearGists: dispatch.userGists.clearGists,\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Index)\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AAIA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AACA;AAKA;;;;A","sourceRoot":""}